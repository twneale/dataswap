{"name":"Dataswap","tagline":"Notes from my talk on using APIs at DataSwap 2013","body":"### Using APIs\r\n\r\nThom Neale: \r\n  * twitter: [@twneale](http://twitter.com/twneale)\r\n  * github: [twneeale](http://github.com/twneale)\r\n\r\n## Government Data\r\n  * Sunlight Foundation [API portal](http://sunlightfoundation.com/api/)\r\n    * in python, \"pip install sunlight\" [python-sunlight](https://github.com/sunlightlabs/python-sunlight)\r\n    * [Congress API](http://sunlightlabs.github.io/congress/)\r\n      * Look up legislators by zip code or lat/long\r\n      * Official Twitter, YouTube, and Facebook accounts.\r\n      * Committees and subcommittees in Congress, including memberships and rankings.\r\n      * Visualizing partisanship \r\n        * Cody's talk showed grouping of federal legislators by frequency of voting similarity\r\n        * Do stuff like this: an [area curve](http://beta.staterep.me/profile/PAL000013) depicting the ideological distribution of the Pennsylvania house and senate\r\n        * Useful libraries\r\n          * [Political Science Computational Library](http://cran.r-project.org/web/packages/pscl/index.html)\r\n            * Absurd amount of Political Science computation insanity\r\n          * [pypscl](https://github.com/twneale/pypscl)\r\n            * A friendlier Python wrapper for said computational insanity\r\n    * [Influence Explorer API](http://sunlightlabs.github.io/datacommons/)\r\n      * See it in action: [http://influenceexplorer.com/](http://influenceexplorer.com/)\r\n      * Programmatic access tracking the influence of money in politics\r\n      * Search and filter individual contributions, contracts, grants and lobbying registrations. \r\n      * Find the most active Politicians, Individuals, Organizations and Industries based on receipts, expenditures and lobbying.\r\n    * [Openstates.org API](http://sunlightlabs.github.io/openstates-api/)\r\n      * See it an action at [http://openstates.org](http://openstates.org)\r\n      * State Metadata - Details on what data is available, including terms, sessions, and state-specific names for things.\r\n      * Bills - Details on bills & resolutions, including actions & votes.\r\n      * Legislators - Details on legislators, including contact details.\r\n      * Committees - Details on committees as they currently stand.\r\n      * Events - Details on upcoming events such as committee meetings and hearings.\r\n      * Districts - Details on districts and their boundaries.\r\n      * What kinds of stuff could you do with this data?\r\n        * Predictive analytics for state legislations: [FiscalNote.com](http://fiscalnote.com)\r\n          * No one is doing this stuff (except fiscalnote.com)\r\n          * Does anyone care? Mark Cuban just invested 1.2 Million in Fiscal Note        \r\n      * Terrible Ideas\r\n        * Legislative Hot or Not .COM\r\n        * Republican/Democrat or not .COM\r\n  * [Canadian Legal Information Institute](http://canlii.org)\r\n     * Canadian Court Decisions [API](http://developer.canlii.org/docs)\r\n     * Network analysis of Canadian Court decision citations patterns [by me!](http://twneale.github.io/citation-network-analysis/)\r\n     * Cite Fight! [cite-fight.com](https://cite-fight.com) \r\n  * [OpenCorporates.org API](http://api.opencorporates.com/documentation/Home)\r\n     * How complex are financial relationships? (OMG)[http://opencorporates.com/viz/financial/]\r\n  \r\n## Other useful APIs\r\n  * [Diffbot.com](http://diffbot.com)\r\n    * Extract main content from a page (remove navigation, header, footer, etc)\r\n    * Extract keywords\r\n  * [Alchemy API](http://www.alchemyapi.com/)\r\n    * Entity recognition--returns entities tagged with dbpedia, freebase IDs\r\n    * Sentiment analysis\r\n  * [SmartyStreets](http://smartystreets.com/)\r\n    * Pass it unstructured text, get one or more normalized addresses in return\r\n  * [Open Calais](http://www.opencalais.com/)\r\n    * Entity extraction\r\n\r\n## 5 Tips for Working with APIs\r\n\r\n* Be cheap\r\n  * Resist the urge to subscribe to non-free APIs, at least at first\r\n  * Too often developers overcommit themselves to a certain technology--don't do it!\r\n  * Try out different free APIs; throw out the ones that don't work for you\r\n* Later, inquire about free/cheap use for educational purposes\r\n  * Some service will give you free unlimited use\r\n  * Others only do that for 501(c)(3) nonprofit orgs\r\n* Free APIs can be flaky\r\n  * Consider using an task queue like [Celery](http://www.celeryproject.org/)\r\n  * Tasks succeeded or fail individually, can be retried individually\r\n* To maximize freeness, consider caching responses\r\n  * Many APIs other data in JSON\r\n  * You can insert those responses directly into NoSQL databases like MongoDB, CouchDB, Cassandra\r\n  * [MongoLab](http://mongolab.com) You can create an unlimited (?) number of free 500MB of MongoDB databases\r\n  * Resist the urge to cache response on disk: if you're using Amazon EC2, you'll be sorry\r\n\r\n### GO FORTH AND HACK!\r\n","google":"UA-44953144-1","note":"Don't delete this file! It's used internally to help with page regeneration."}